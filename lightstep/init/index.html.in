<!doctype html>
<html>
  <head>
    <title>Socket.IO chat</title>
    <style>
      * { margin: 0; padding: 0; box-sizing: border-box; }
      body { font: 13px Helvetica, Arial; }
      form { background: #000; padding: 3px; position: fixed; bottom: 0; width: 100%; }
      form input { border: 0; padding: 10px; width: 90%; margin-right: .5%; }
      form button { width: 9%; background: rgb(130, 224, 255); border: none; padding: 10px; }
      #messages { list-style-type: none; margin: 0; padding: 0; }
      #messages li { padding: 5px 10px; }
      #messages li:nth-child(odd) { background: #eee; }
      #messages { margin-bottom: 40px }
    </style>
  </head>
  <body>
    <ul id="messages"></ul>
    <form action="">
      <input id="m" autocomplete="off" /><button>Send</button>
    </form>
    <script src="https://cdn.socket.io/socket.io-1.2.0.js"></script>
    <script src="https://code.jquery.com/jquery-1.11.1.js"></script>
    <script type="text/javascript" src="js/opentracing-browser.js"></script>
    <script type= "text/javascript" src="js/lightstep-tracer.js"
          data-init_global_tracer="true"
          data-access_token="$LIGHTSTEP_ACCESS_TOKEN"
          data-component_name="ot-chat"
          data-xhr_instrumentation="true"
    ></script>
    <script>
      $(function () {
        var socket = new WebSocket("ws://" + window.location.host + "/ws");
        $('form').submit(function(){
          let tracer = opentracing.globalTracer();
          let span = tracer.startSpan("SendMsg");
          let message = {
            "content": $('#m').val(),
            "spanContext": {}
          };
          tracer.inject(span, opentracing.FORMAT_TEXT_MAP, message["spanContext"]);
          socket.send(JSON.stringify(message));
          $('#m').val('');
          span.finish();
          return false;
        });

        socket.onmessage =  function(event){
          let spanOptions = {
            "startTime": (new Date).getTime()
          };
          let tracer = opentracing.globalTracer();
          console.log("data = " + event.data);
          let message = JSON.parse(event.data);
          if ("spanContext" in message) {
            let prevContext = tracer.extract(opentracing.FORMAT_TEXT_MAP,
                                             message["spanContext"]);
            console.log("prevContext" + JSON.stringify(prevContext));
            console.log("ctxType " + typeof(prevContext));
            <!-- spanOptions["references"] = [ -->
            <!--   opentracing.followsFrom(prevContext) -->
            <!-- ]; -->
          }
          let span = tracer.startSpan("ReceiveMsg", spanOptions);
          $('#messages').append($('<li>').text(message["content"]));
          window.scrollTo(0, document.body.scrollHeight);
          span.finish();
        };
      });
    </script>
  </body>
</html>
